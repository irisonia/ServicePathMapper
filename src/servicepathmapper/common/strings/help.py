import servicepathmapper.common.strings.file_names as file_names
import servicepathmapper.common.strings.program_args as program_args
import servicepathmapper.common.strings.stats as output_stats

CONFIG_HELP_STR = (
    'Configuration for running Service Path Mapper:'
    '\nThe program accepts a path to a JSON configuration file.'
    '\nExample: `--config [path/to/config.json]`'
    '\nConfiguration given via the configuration file has lower precedence than that given via the command line.'
    '\nExample of a minimal valid configuration file:\n'
    '{\n'
    f'  "{program_args.ARG_CLIENTS_DIR}": "path/to/clients/directory",\n'
    f'  "{program_args.ARG_PROVIDERS_DIR}": "path/to/providers/directory",\n'
    f'  "{program_args.ARG_SRC_SERVER}": "name of the server that is the starting point of every path",\n'
    f'  "{program_args.ARG_DST_SERVER}": "name of the server that is the ending point of every path",\n'
    f'  "{program_args.ARG_MAX_PATH_LEN}": 4\n'
    '}'
    '\n\nNotes:'
    '\n  - In the configuration file, boolean arguments are assigned a value: false, 0, true, or 1.'
    '\n    On the command line, use either the boolean argument or its "no-" version.'
    '\n    Example: To set the boolean argument stats-only to false:'
    f'\n    - In the configuration file: "{program_args.ARG_STATS_ONLY}": false'
    f'\n    - On the command line: `--no-{program_args.ARG_STATS_ONLY}`'
    '\n'
)

OUTPUT_STATS_HELP_STR = (
    'Stats Output of Service Path Mapper:'
    f'\nThe output file `{file_names.OUTPUT_STATS_FILE_NAME}` contains analysis and statistics of two types:'
    '\n - Config stats: Analysis of the servers and services, and the relationships between them.'
    '\n   The config stats are based on the raw input, and do not require actual creation of paths.'
    '\n - Participation counters: Analysis of server and service participation in the actual mapped paths.'
    '\n\nNotes:'
    '\n  - Stats output only considers servers and services that have the potential to participate in paths,'
    '\n    and ignores those ruled out by policy constraints, such as forbidden servers or services.'
    f'\n  - To output the stats file only (config stats and participation counters), but no paths or server groups, use `--{program_args.ARG_STATS_ONLY}`.'
    f'\n  - To output the config stats only, without mapping paths at all, use `--{program_args.ARG_CONFIG_STATS_ONLY}`.'
    '\n\nConfig stats:'
    f'\n`{output_stats.OUTPUT_STATS_SERVICES_HAVING_CLIENTS_BUT_NO_PROVIDERS}`:'
    f'\n{output_stats.OUTPUT_STATS_SERVICES_HAVING_CLIENTS_BUT_NO_PROVIDERS_HELP_STR}'
    f'\n`{output_stats.OUTPUT_STATS_SERVICES_HAVING_PROVIDERS_BUT_NO_CLIENTS}`:'
    f'\n{output_stats.OUTPUT_STATS_SERVICES_HAVING_PROVIDERS_BUT_NO_CLIENTS_HELP_STR}'
    f'\n`{output_stats.OUTPUT_STATS_SERVICES_UNREACHABLE_FOR_SOLE_PROVIDER_CLIENT}`:'
    f'\n{output_stats.OUTPUT_STATS_SERVICES_UNREACHABLE_FOR_SOLE_PROVIDER_CLIENT_HELP_STR}'
    '\n\nParticipation in path counters:'
    f'\n`{output_stats.OUTPUT_STATS_ACTUAL_NON_PARTICIPATING_SERVERS}`:'
    f'\n{output_stats.OUTPUT_STATS_ACTUAL_NON_PARTICIPATING_SERVERS_HELP_STR}'
    f'\n`{output_stats.OUTPUT_STATS_ACTUAL_SERVER_PARTICIPATION_CTR}`:'
    f'\n{output_stats.OUTPUT_STATS_ACTUAL_SERVER_PARTICIPATION_CTR_HELP_STR}'
    f'\n`{output_stats.OUTPUT_STATS_ACTUAL_NON_PARTICIPATING_SERVICES}`:'
    f'\n{output_stats.OUTPUT_STATS_ACTUAL_NON_PARTICIPATING_SERVICES_HELP_STR}'
    f'\n`{output_stats.OUTPUT_STATS_ACTUAL_SERVICE_PARTICIPATION_CTR}`:'
    f'\n{output_stats.OUTPUT_STATS_ACTUAL_SERVICE_PARTICIPATION_CTR_HELP_STR}'
    f'\n`{output_stats.OUTPUT_STATS_ACTUAL_SERVER_PAIR_ADJACENCY_CTR}`:'
    f'\n{output_stats.OUTPUT_STATS_ACTUAL_SERVER_PAIR_ADJACENCY_CTR_HELP_STR}'
    '\n'
)

OUTPUT_PATHS_HELP_STR = (
    'Paths Output of Service Path Mapper:'
    '\nPaths are grouped into directories by their length, i.e., the size of the server group that makes the path.'
    f'\nExample: All paths of 3 servers are under the directory `{file_names.OUTPUT_FILE_NAME_PART_PATH_LEN}_3`.'
    '\nIn the directory, each group of servers is assigned a serial number, and is represented by two files:'
    '\n  - A file that lists the names of the servers in the group, one per line, sorted alphabetically.'
    '\n  - A file that lists all the combinations of service-based paths composed using these exact servers.'
    "\nBoth files will include the group's serial number in their filename:"
    f'\n  - The first server group in a directory will have the files: '
    f'`0` and `0_{file_names.OUTPUT_FILE_NAME_PART_SERVERS_GROUP}`;'
    f'\n  - The second server group in the same directory will have the files: '
    f'`1` and `1_{file_names.OUTPUT_FILE_NAME_PART_SERVERS_GROUP}`, etc.'
    '\nStructure of a single service-based path in the paths file:'
    f'\n  {program_args.ARG_SRC_SERVER} [comma-separated list of connecting services] ... {program_args.ARG_DST_SERVER}'
    '\n\nNotes:'
    f'\n  - To not output the actual paths, but still output the server groups files, use `--{program_args.ARG_SERVER_GROUPS_ONLY}`.'
    f'\n  - To not output paths nor server groups, but just the stats file, use `--{program_args.ARG_STATS_ONLY}`.'
    f'\n  - To output config stats only, and not calculate paths at all, use `--{program_args.ARG_CONFIG_STATS_ONLY}`.'
    '\n'
)

OUTPUT_HELP_STR = (
    'Output of Service Path Mapper:'
    '\nBy default, program output is placed in a directory named after the run timestamp, under a common root '
    f'named `{file_names.OUTPUT_DEFAULT_ROOT_DIR_NAME}`.'
    f'\nTo place the output in a different location, use `--{program_args.ARG_OUTPUT_DIR}`.'
    '\nThe program output consists of:'
    f'\n  - Paths and server groups: for details, see `--{program_args.ARG_HELP_PATHS}`.'
    f'\n  - Statistics and analysis: for details, see `--{program_args.ARG_HELP_STATS}`.'
    f'\n  - `{file_names.OUTPUT_LOG_FILE_NAME}`: Log of the raw program configuration and significant notifications.'
    '\n'
)
